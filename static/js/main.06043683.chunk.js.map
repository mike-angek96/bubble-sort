{"version":3,"sources":["sort/components/bar.js","sort/components/visualizer.js","sort/algoritmo/bubble.js","sort/App.js","index.js"],"names":["Bar","data","rangeValue","color","width","className","map","n","i","key","id","style","backgroundColor","border","height","Visualizer","useState","setData","setRangeValue","useEffect","setValues","max","min","arrayLength","randomNumbers","push","Math","trunc","random","onClick","options","document","getElementById","sorted","aux","length","j","BubbleSort","setTimeout","bubble","type","cursor","step","defaultValue","onMouseUp","e","target","value","onChange","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.06043683.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Bar=({data,rangeValue, color})=>{\r\n\r\n    let width='';\r\n    if(rangeValue <=15){\r\n        width= '50px';\r\n    }\r\n    else if(rangeValue > 15 && rangeValue <=115){\r\n        width= '7px';\r\n    }\r\n    else if(rangeValue >115){\r\n        width='5px';\r\n    }\r\n\r\n    return(\r\n        <div className=\"graph\">\r\n            {\r\n                data.map((n,i)=>{\r\n                        return(\r\n                            <div key={i} id={i} style={{\r\n                                backgroundColor:`${color}`,\r\n                                border:'1px solid black',\r\n                                width: `${width}`,\r\n                                height:`${n}px`,\r\n                            }}>\r\n                            </div>\r\n                        );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","import React,{useEffect,useState} from 'react';\r\nimport {Bar} from './bar.js';\r\nimport {BubbleSort} from '../algoritmo/bubble.js';\r\n\r\nexport const Visualizer=()=>{\r\n\r\n    const [data,setData]=useState([]);\r\n    const [rangeValue, setRangeValue]=useState(5);\r\n\r\n    useEffect(()=>{\r\n        setValues();\r\n    },[rangeValue]);\r\n\r\n    const generateRandomNumbers=(max,min)=>{\r\n\r\n        //return Math.trunc( Math.random()*(50 - 300) )+300\r\n        return Math.trunc( Math.random()*(max-min ) )+min\r\n    }\r\n\r\n    const setValues=()=>{\r\n        let arrayLength=rangeValue;\r\n        let randomNumbers=[];\r\n        for(let i=0; i< arrayLength; i++){\r\n            //Random * (max-min) + min\r\n            randomNumbers.push(generateRandomNumbers(5,400));\r\n            \r\n        }\r\n\r\n        setData(randomNumbers);\r\n    }\r\n\r\n    const reset=function(){\r\n        setValues();\r\n    }\r\n\r\n    const bubble=()=>{\r\n        let options=document.getElementById(\"options\");\r\n        options.style=\"visibility:hidden;\";\r\n        let n=data;\r\n        \r\n        const sorted=BubbleSort(n); //obtener el array ya ordenado\r\n        \r\n        let width='';\r\n            if(rangeValue <=15){\r\n                width= '50px';\r\n            }\r\n            else if(rangeValue > 15 && rangeValue <=115){\r\n                width= '7px';\r\n            }\r\n            else if(rangeValue >115){\r\n                width='5px';\r\n            }\r\n\r\n        for(let i=0; i < data.length; i++){\r\n            setTimeout(()=>{\r\n                    document.getElementById(i).style=`\r\n                        background:yellow; \r\n                        width:${width};\r\n                        height:${sorted[i]}px;\r\n                        border:1px solid black;\r\n                    `\r\n\r\n                if(i < data.length-1){\r\n                    document.getElementById((i+1)).style=`\r\n                        background:#5680E9;\r\n                        width:${width}; \r\n                        height:${sorted[i]}px; \r\n                        border:1px solid pink;\r\n                    `\r\n                }\r\n                if( i ===data.length-1){\r\n                    options.style=\"visibility:visible;\";\r\n                }\r\n\r\n            },i * 500);\r\n        }\r\n    }\r\n\r\n            return(\r\n                <div className=\"app\">\r\n                    <div id=\"options\" className=\"options\" >\r\n                        <button className=\"btn\"  onClick={()=>bubble()}>Bubble Sort</button>\r\n                        <button className=\"btn  reset\"  onClick={()=>reset()}>generar nuevo array</button>\r\n                        <input type=\"range\" id=\"rangeNormal\" style={{cursor:'pointer'}}  min=\"5\" max=\"205\" step=\"10\" defaultValue={rangeValue} onMouseUp={e=> setRangeValue(e.target.value)}/>\r\n                        <input type=\"range\" id=\"rangeResponsive\" style={{cursor:'pointer'}}  min=\"5\" max=\"65\" step=\"10\" defaultValue={rangeValue} onChange={e=> setRangeValue(e.target.value)}/>\r\n                        <h2>{rangeValue}</h2>\r\n                    </div>\r\n                    <hr/>\r\n                    {\r\n                          <Bar data={data} rangeValue={rangeValue} color=\"gray\"/>\r\n                    }\r\n                </div>\r\n            );\r\n}","export const  BubbleSort=(n)=>{\r\n\r\n    let aux=0;\r\n\r\n    for(let i=0; i < n.length; i++){\r\n        for(let j=0; j < n.length; j++){\r\n            if(n[j] > n[j+1]){\r\n                aux=n[j];\r\n                n[j]=n[j+1];\r\n                n[j+1]=aux;\r\n            }\r\n        }\r\n    }\r\n\r\n    return n;\r\n}","import React from 'react';\r\nimport {Visualizer} from './components/visualizer.js';\r\nimport './App.css';\r\n\r\nfunction App(){\r\n\r\n    return(\r\n        <>\r\n        <Visualizer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './socialnet/App';\nimport {Provider} from 'react-redux';\nimport store from './socialnet/store.js';\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n            document.getElementById('root'));\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './sort/App';\n\n    ReactDOM.render(\n            <App />,\n            document.getElementById('root'));"],"sourceRoot":""}